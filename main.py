from fastapi import FastAPI, Request
from fastapi.staticfiles import StaticFiles
import openai
from dotenv import load_dotenv
import os
import httpx

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env
load_dotenv()
openai.api_key = os.getenv("OPENAI_API_KEY")
telegram_token = os.getenv("TELEGRAM_TOKEN")

app = FastAPI()
app.mount("/static", StaticFiles(directory="static"), name="static")

# –®–∞–±–ª–æ–Ω–Ω—ã–µ system-–ø—Ä–æ–º–ø—Ç—ã (–º–æ–∂–µ—à—å –ø–æ—Ç–æ–º –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ)
system_prompts = {
    "—à–∞–±–ª–æ–Ω1": "–¢—ã –≤–µ–¥—ë—à—å —Å–µ–±—è —Ç–µ–ø–ª–æ –∏ –ª–∞—Å–∫–æ–≤–æ.",
    "—à–∞–±–ª–æ–Ω2": "–¢—ã –æ—Ç–≤–µ—á–∞–µ—à—å —Ä–µ–∑–∫–æ, –≥—Ä—É–±–æ –∏ —Å —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ–º.",
    "—à–∞–±–ª–æ–Ω3": "–¢—ã –≥–æ–≤–æ—Ä–∏—à—å —Å–¥–µ—Ä–∂–∞–Ω–Ω–æ –∏ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ."
}


@app.post("/webhook")
async def telegram_webhook(request: Request):
    payload = await request.json()
    print("üì® –í—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Telegram:", payload)

    try:
        chat_id = payload["message"]["chat"]["id"]
        text = payload["message"]["text"]

        reply = await get_gpt_reply(text)
        await send_telegram_message(chat_id, reply)

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ:", e)

    return {"ok": True}


def detect_prompt_mode(text: str) -> str:
    """–û–ø—Ä–µ–¥–µ–ª—è–µ–º —à–∞–±–ª–æ–Ω –ø–æ —Å–ª–æ–≤–∞–º –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏."""
    text = text.lower()
    if any(word in text for word in ["–º–∏–ª–∞—è", "—É–º–Ω–∏—Ü–∞", "–∫–ª–∞—Å—Å–Ω–∞—è", "–ª—é–±–ª—é", "—Å–ø–∞—Å–∏–±–æ", "–ª–∞–ø–æ—á–∫–∞"]):
        return "—à–∞–±–ª–æ–Ω1"
    if any(word in text for word in ["—Ç–≤–∞—Ä—å", "–∏–¥–∏–æ—Ç", "–¥—É—Ä–∞", "–Ω–µ–Ω–∞–≤–∏–∂—É", "–±–µ—Å–∏—à—å", "–æ—Ç–≤—Ä–∞—Ç–∏—Ç–µ–ª—å–Ω–æ"]):
        return "—à–∞–±–ª–æ–Ω2"
    return "—à–∞–±–ª–æ–Ω3"  # –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ


async def get_gpt_reply(user_text: str) -> str:
    # –í—ã–±–æ—Ä —à–∞–±–ª–æ–Ω–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞
    mode = detect_prompt_mode(user_text)
    system_prompt = system_prompts[mode]

    print(f"üß† –í—ã–±—Ä–∞–Ω —à–∞–±–ª–æ–Ω: {mode}")
    print(f"üì• –°–æ–æ–±—â–µ–Ω–∏–µ: {user_text}")

    messages = [
        {"role": "system", "content": system_prompt},
        {"role": "user", "content": user_text}
    ]

    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=messages,
        )
        reply = response["choices"][0]["message"]["content"]
        return reply
    except Exception as e:
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ GPT: {e}"


async def send_telegram_message(chat_id: int, text: str):
    url = f"https://api.telegram.org/bot{telegram_token}/sendMessage"
    payload = {"chat_id": chat_id, "text": text}
    async with httpx.AsyncClient() as client:
        await client.post(url, json=payload)
